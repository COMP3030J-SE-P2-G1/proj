<div class="size-full flex flex-col p-3">
    <header class="flex flex-col items-center mt-4">
        <div class="flex"><h1 class="text-3xl font-bold text-base-content">API Keys</h1>
            <div class="dropdown dropdown-end">
                <div tabindex="0" role="button" class="btn btn-circle btn-ghost btn-xs text-info">
                    <svg tabindex="0" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                         class="w-4 h-4 stroke-current">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                </div>
                <div tabindex="0" class="card compact dropdown-content z-[1] shadow bg-base-100 rounded-box w-96">
                    <div tabindex="0" class="card-body">
                        <p>
                            As an owner of this project, you can view and manage all SolarScape API keys associated with
                            it. Please do not share your API key with others or expose it in the browser or other
                            client-side code. To protect the security of your account, SolarScape may also automatically
                            disable any API key that has been publicly leaked.
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <span class="text-base-content-shadow mt-2">Project API keys have replaced user API keys.</span>
        <span class="text-base-content-shadow">We recommend using project-based API keys for more granular control over your resources.</span>
    </header>
    <section class="m-2">
        <div class="max-w-screen-lg mx-auto p-5">
            <div class="flex flex-col items-center mt-8">
                <svg xmlns="http://www.w3.org/2000/svg" class="w-7 h-7 bg-zinc-200 bg-origin-content rounded"
                     viewBox="0 0 20 20">
                    <path fill="currentColor"
                          d="M15 9h-1V6c0-2.2-1.8-4-4-4S6 3.8 6 6v3H5c-.5 0-1 .5-1 1v7c0 .5.5 1 1 1h10c.5 0 1-.5 1-1v-7c0-.5-.5-1-1-1m-4 7H9l.4-2.2c-.5-.2-.9-.8-.9-1.3c0-.8.7-1.5 1.5-1.5s1.5.7 1.5 1.5c0 .6-.3 1.1-.9 1.3zm1-7H8V6c0-1.1.9-2 2-2s2 .9 2 2z"/>
                </svg>
            </div>
            <div class="flex flex-col items-center mt-8">
                <p class="text-center mb-4">
                    Create an API key to access the SolarScape API
                </p>
                <button class="btn" onclick="my_modal_4.showModal()">Create new secret key</button>
            </div>
            <dialog id="my_modal_4" class="modal">
                <div class="modal-box w-1/3 max-w-5xl">
                    <h2 class="font-bold text-lg">Create new secret key</h2>
                    <p class="py-4">Name</p>
                    <input type="text" placeholder="My Key" id="keyNameInput" class="input input-bordered w-full max-w-xs"/>
                    <div class="modal-action">
                        <button class="btn" onclick="my_modal_4.close()">Close</button>
                        <button id="createKeyButton" class="btn bg-emerald-400">Create secret key</button>
                    </div>
                </div>
            </dialog>
            <dialog id="secretKeyModal" class="modal">
                <div class="modal-box w-1/3 max-w-5xl">
                    <h2 class="font-bold text-lg">Generated Secret Key</h2>
                    <p class="py-4" id="secretKeyDisplay"></p>
                    <button class="btn" onclick="secretKeyModal.close()">Close</button>
                </div>
            </dialog>
            <div class="overflow-x-auto mt-4">
                <table class="table">
                    <thead>
                    <tr>
                        <th></th>
                        <th>Name</th>
                        <th>SECRET KEY</th>
                        <th>CREATED</th>
                        <th>LAST USED</th>
                        <th>PERMISSIONS</th>
                        <th></th>
                    </tr>
                    </thead>
                    <tbody id="keyTableBody">
                    <tr>
                        <th>1</th>
                        <td>Test</td>
                        <td>sk-1TFCOpcnRU</td>
                        <td>2024/5/8</td>
                        <td>Never</td>
                        <td>
                            <label class="swap">
                                <input type="checkbox"/>
                                <div class="swap-on">ON</div>
                                <div class="swap-off">OFF</div>
                            </label>
                        </td>
                        <td>
                            <button>
                                <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 12 12">
                                    <path fill="currentColor" d="M5 3h2a1 1 0 0 0-2 0M4 3a2 2 0 1 1 4 0h2.5a.5.5 0 0 1 0
                            1h-.441l-.443 5.17A2 2 0 0 1 7.623 11H4.377a2 2 0 0 1-1.993-1.83L1.941 4H1.5a.5.5 0 0 1
                            0-1zm3.5 3a.5.5 0 0 0-1 0v2a.5.5 0 0 0 1 0zM5 5.5a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0V6a.5.5
                            0 0 1 .5-.5M3.38 9.085a1 1 0 0 0 .997.915h3.246a1 1 0 0 0 .996-.915L9.055 4h-6.11z"/>
                                </svg>
                            </button>
                        </td>
                    </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </section>
</div>

<script>
  // 获取按钮和表格
  const createKeyButton = document.querySelector('#createKeyButton');
  const keyTableBody = document.querySelector('#keyTableBody');
  const keyNameInput = document.querySelector('#keyNameInput');
  let rowCounter = 2; // 从第二行开始计数
  let currentModal = null; // 用于跟踪当前打开的对话框

  // 点击按钮时触发的函数
  createKeyButton.addEventListener('click', function() {
    // 获取输入的 API Key 名称
    const keyName = keyNameInput.value;

    // 创建新的表格行
    const newRow = document.createElement('tr');

    // 添加新的单元格并设置内容
    const serialCell = document.createElement('td');
    serialCell.textContent = rowCounter++;
    newRow.appendChild(serialCell);

    const nameCell = document.createElement('td');
    nameCell.textContent = keyName;
    newRow.appendChild(nameCell);

    const secretKeyCell = document.createElement('td');
    const secretKey = generateSecretKey(); // 生成随机的secret key
    secretKeyCell.textContent = secretKey;
    newRow.appendChild(secretKeyCell);

    const createdCell = document.createElement('td');
    const createdDate = new Date().toLocaleDateString();
    createdCell.textContent = createdDate;
    newRow.appendChild(createdCell);

    const lastUsedCell = document.createElement('td');
    lastUsedCell.textContent = 'Never';
    newRow.appendChild(lastUsedCell);

    const permissionsCell = document.createElement('td');
    permissionsCell.innerHTML = `
    <label class="swap">
        <input type="checkbox"/>
        <div class="swap-on">ON</div>
        <div class="swap-off">OFF</div>
    </label>
    `;
    newRow.appendChild(permissionsCell);


    const deleteButtonCell = document.createElement('td');
    const deleteButton = document.createElement('button');
    deleteButton.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 12 12">
                                    <path fill="currentColor" d="M5 3h2a1 1 0 0 0-2 0M4 3a2 2 0 1 1 4 0h2.5a.5.5 0 0 1 0
                            1h-.441l-.443 5.17A2 2 0 0 1 7.623 11H4.377a2 2 0 0 1-1.993-1.83L1.941 4H1.5a.5.5 0 0 1
                            0-1zm3.5 3a.5.5 0 0 0-1 0v2a.5.5 0 0 0 1 0zM5 5.5a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0V6a.5.5
                            0 0 1 .5-.5M3.38 9.085a1 1 0 0 0 .997.915h3.246a1 1 0 0 0 .996-.915L9.055 4h-6.11z"/>
                                </svg>`;
    deleteButton.addEventListener('click', function() {
      newRow.remove(); // 删除当前行
    });
    deleteButtonCell.appendChild(deleteButton);
    newRow.appendChild(deleteButtonCell);

    // 将新行添加到表格中
    keyTableBody.appendChild(newRow);

    // 关闭当前对话框
    closeCurrentModal();

    // 弹出对话框显示生成的SECRET KEY
    const secretKeyModal = document.querySelector('#secretKeyModal');
    secretKeyModal.showModal();
    currentModal = secretKeyModal;

    const secretKeyDisplay = document.querySelector('#secretKeyDisplay');
    secretKeyDisplay.textContent = secretKey;
  });

  // 关闭当前对话框
  function closeCurrentModal() {
    if (currentModal !== null && currentModal.open) {
      currentModal.close();
    }
  }

  // 生成随机的secret key函数
  function generateSecretKey() {
    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    const length = 10;
    let secretKey = '';
    for (let i = 0; i < length; i++) {
      secretKey += characters.charAt(Math.floor(Math.random() * characters.length));
    }
    return 'sk-' + secretKey; // 根据你的格式要求返回secret key
  }
</script>
