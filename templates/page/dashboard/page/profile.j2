<div class="size-full flex flex-col p-3">
    <section>
        <div class="flex flex-col items-center mt-4">
            <h1 class="text-3xl font-bold text-base-content">Profiles</h1>
            <span class="text-base-content-shadow mt-2">xxxxxxxxxxxxx</span>
        </div>
    </section>
    <section class="flex flex-col mt-4">
        <div class="grid flex-grow place-items-start">
            <div class="h-full w-full">
                <select class="select select-bordered border-white" id="consumptionSelect"
                        onchange="updateConsumptionChart()">
                    <option disabled selected>Electricity Consumption</option>
                    {% for key, value in profiles.items() %}
                        <option value="key">{{ value }}</option>
                    {% endfor %}
                </select>
                <button class="btn btn-circle sm:btn-sm" onclick="profile_modal.showModal()">
                    <svg xmlns="http://www.w3.org/2000/svg" width="2em" height="2em" viewBox="0 0 24 24">
                        <path fill="currentColor"
                              d="M11 11V7h2v4h4v2h-4v4h-2v-4H7v-2zm1 11C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10m0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16"/>
                    </svg>
                </button>
                <dialog id="profile_modal" class="modal">
                    <div class="modal-box w-11/12 max-w-5xl">
                        <form method="dialog">
                          <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2">✕</button>
                        </form>
                        <h1 class="font-bold  text-2xl text-center py-4">{{ _("Create a Profile") }}</h1>
                        <form action="{{ url_for('dashboard.create_profile') }}" id="profileForm" method="POST"
                              class="form-control w-full">
                            {{ profileForm.hidden_tag() }}
                            {% macro render_field(field, type) %}
                                <div class="form-group mb-2">
                                    {% if type == "" %}
                                        {{ field.label(class="label") }}
                                        {% if field.errors %}
                                            {{ field(class="input input-bordered input-error w-full text-sm") }}
                                            <div class="alert alert-error shadow-lg mt-1 p-2 text-xs"
                                                 style="background-color: #FECACA; color: #B91C1C;">
                                                <!-- Custom colors for errors -->
                                                <div>
                                                    {% for error in field.errors %}
                                                        <span>{{ error }}</span>{% if not loop.last %}<br>{% endif %}
                                                    {% endfor %}
                                                </div>
                                            </div>
                                        {% else %}
                                            {{ field(class="input input-bordered w-full text-sm") }}
                                        {% endif %}
                                    {% else %}
                                        {{ field.label(class="label") }}
                                        {% if field.errors %}
                                            {{ field(class="input input-bordered input-error w-full text-sm", type=type) }}
                                            <div class="alert alert-error shadow-lg mt-1 p-2 text-xs"
                                                 style="background-color: #FECACA; color: #B91C1C;">
                                                <!-- Custom colors for errors -->
                                                <div>
                                                    {% for error in field.errors %}
                                                        <span>{{ error }}</span>{% if not loop.last %}<br>{% endif %}
                                                    {% endfor %}
                                                </div>
                                            </div>
                                        {% else %}
                                            {{ field(class="input input-bordered w-full text-sm", type=type) }}
                                        {% endif %}
                                    {% endif %}
                                </div>
                            {% endmacro %}

                            <section class="flex flex-col h-full">
                                <div class="basis-1/3 h-full flex m-2">
                                    <div class="basis-1/2 p-4 h-full place-items-center">
                                        {{ render_field(profileForm.name) }}
                                        {{ render_field(profileForm.desc) }}
                                        {{ render_field(profileForm.start_time, "date") }}
                                        {{ render_field(profileForm.end_time, "date") }}
                                        {{ render_field(profileForm.usage_file, "") }}
                                    </div>
                                    <div class="basis-1/2 h-full">
                                        <div class="flex flex-row items-center mt-4">
                                            <!-- 更新搜索地址输入框和按钮 -->
                                            <label for="address" class="mr-2">Search Address:</label>
                                            <input type="text" id="address" placeholder="Enter an address" class="input input-bordered w-full text-sm mr-2">
                                            <button onclick="geocodeAddress()" class="btn">Search</button>

                                        </div>
                                        <div id="map" class="h-96 mt-4"></div>
                                        <script
                                            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBKcVzcRDywvdqWYnps09kexWfEHQqqyqc&callback=initMap&v=weekly&solution_channel=GMP_CCS_geocodingservice_v1"
                                            defer
                                        ></script>
                                        {{ render_field(profileForm.lon) }}
                                        {{ render_field(profileForm.lat) }}
                                    </div>
                                </div>
                                <div class="divider"></div>
                                <div class="basis-1/3 h-full flex m-2">
                                    <div class="basis-1/2 p-4 h-full place-items-center">
                                        {{ render_field(profileForm.tech, "select") }}
                                        {{ render_field(profileForm.loss) }}
                                    </div>
                                    <div class="basis-1/2 p-4 h-full place-items-center">
                                        {{ render_field(profileForm.power) }}
                                        {{ render_field(profileForm.generation) }}
                                    </div>
                                </div>
                            </section>
                        </form>
                        <div class="modal-action justify-center mt-4">
                            <button type="submit" form="profileForm" class="btn">{{ _("Confirm") }}</button>
                            <form method="dialog">
                                <button class="btn">{{ _("Close") }}</button>
                            </form>
                        </div>
                    </div>
                </dialog>
            </div>
        </div>
    </section>
</div>





<script>
    let map;
    let marker;
    let geocoder;

    function initMap() {
        const lat = parseFloat(document.getElementById('lat').value) || 53.3067;
        const lon = parseFloat(document.getElementById('lon').value) || -6.2269;

        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: lat, lng: lon },
            zoom: 8
        });

        marker = new google.maps.Marker({
            map: map,
            position: map.getCenter()
        });

        geocoder = new google.maps.Geocoder();

        map.addListener('click', function(event) {
            updateMarker(event.latLng.lat(), event.latLng.lng());
        });
    }

    function updateMarker(lat, lng) {
        const location = { lat: lat, lng: lng };
        map.setCenter(location);
        marker.setPosition(location);

        // 将经纬度填入到 lon 和 lat 输入框中
        document.getElementById('lon').value = lng;
        document.getElementById('lat').value = lat;
    }

    function geocodeAddress() {
        const address = document.getElementById('address').value;

        geocoder.geocode({ 'address': address }, function(results, status) {
            if (status === 'OK') {
                const location = results[0].geometry.location;
                updateMarker(location.lat(), location.lng());
            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }

    document.addEventListener('DOMContentLoaded', function() {
        initMap();
    });
</script>


